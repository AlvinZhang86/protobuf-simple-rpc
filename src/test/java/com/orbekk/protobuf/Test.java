// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/test/java/com/orbekk/protobuf/Test.proto

package com.orbekk.protobuf;

public final class Test {
  private Test() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Type1 extends
      com.google.protobuf.GeneratedMessage {
    // Use Type1.newBuilder() to construct.
    private Type1() {
      initFields();
    }
    private Type1(boolean noInit) {}
    
    private static final Type1 defaultInstance;
    public static Type1 getDefaultInstance() {
      return defaultInstance;
    }
    
    public Type1 getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.orbekk.protobuf.Test.internal_static_com_orbekk_protobuf_Type1_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.orbekk.protobuf.Test.internal_static_com_orbekk_protobuf_Type1_fieldAccessorTable;
    }
    
    // optional int32 a = 1;
    public static final int A_FIELD_NUMBER = 1;
    private boolean hasA;
    private int a_ = 0;
    public boolean hasA() { return hasA; }
    public int getA() { return a_; }
    
    // optional int32 b = 2;
    public static final int B_FIELD_NUMBER = 2;
    private boolean hasB;
    private int b_ = 0;
    public boolean hasB() { return hasB; }
    public int getB() { return b_; }
    
    // optional string message = 3;
    public static final int MESSAGE_FIELD_NUMBER = 3;
    private boolean hasMessage;
    private java.lang.String message_ = "";
    public boolean hasMessage() { return hasMessage; }
    public java.lang.String getMessage() { return message_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasA()) {
        output.writeInt32(1, getA());
      }
      if (hasB()) {
        output.writeInt32(2, getB());
      }
      if (hasMessage()) {
        output.writeString(3, getMessage());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasA()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getA());
      }
      if (hasB()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getB());
      }
      if (hasMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getMessage());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.orbekk.protobuf.Test.Type1 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.orbekk.protobuf.Test.Type1 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.orbekk.protobuf.Test.Type1 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.orbekk.protobuf.Test.Type1 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.orbekk.protobuf.Test.Type1 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.orbekk.protobuf.Test.Type1 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.orbekk.protobuf.Test.Type1 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.orbekk.protobuf.Test.Type1 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.orbekk.protobuf.Test.Type1 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.orbekk.protobuf.Test.Type1 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.orbekk.protobuf.Test.Type1 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.orbekk.protobuf.Test.Type1 result;
      
      // Construct using com.orbekk.protobuf.Test.Type1.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.orbekk.protobuf.Test.Type1();
        return builder;
      }
      
      protected com.orbekk.protobuf.Test.Type1 internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.orbekk.protobuf.Test.Type1();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.orbekk.protobuf.Test.Type1.getDescriptor();
      }
      
      public com.orbekk.protobuf.Test.Type1 getDefaultInstanceForType() {
        return com.orbekk.protobuf.Test.Type1.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.orbekk.protobuf.Test.Type1 build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.orbekk.protobuf.Test.Type1 buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.orbekk.protobuf.Test.Type1 buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.orbekk.protobuf.Test.Type1 returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.orbekk.protobuf.Test.Type1) {
          return mergeFrom((com.orbekk.protobuf.Test.Type1)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.orbekk.protobuf.Test.Type1 other) {
        if (other == com.orbekk.protobuf.Test.Type1.getDefaultInstance()) return this;
        if (other.hasA()) {
          setA(other.getA());
        }
        if (other.hasB()) {
          setB(other.getB());
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setA(input.readInt32());
              break;
            }
            case 16: {
              setB(input.readInt32());
              break;
            }
            case 26: {
              setMessage(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional int32 a = 1;
      public boolean hasA() {
        return result.hasA();
      }
      public int getA() {
        return result.getA();
      }
      public Builder setA(int value) {
        result.hasA = true;
        result.a_ = value;
        return this;
      }
      public Builder clearA() {
        result.hasA = false;
        result.a_ = 0;
        return this;
      }
      
      // optional int32 b = 2;
      public boolean hasB() {
        return result.hasB();
      }
      public int getB() {
        return result.getB();
      }
      public Builder setB(int value) {
        result.hasB = true;
        result.b_ = value;
        return this;
      }
      public Builder clearB() {
        result.hasB = false;
        result.b_ = 0;
        return this;
      }
      
      // optional string message = 3;
      public boolean hasMessage() {
        return result.hasMessage();
      }
      public java.lang.String getMessage() {
        return result.getMessage();
      }
      public Builder setMessage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder clearMessage() {
        result.hasMessage = false;
        result.message_ = getDefaultInstance().getMessage();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.orbekk.protobuf.Type1)
    }
    
    static {
      defaultInstance = new Type1(true);
      com.orbekk.protobuf.Test.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.orbekk.protobuf.Type1)
  }
  
  public static final class Type2 extends
      com.google.protobuf.GeneratedMessage {
    // Use Type2.newBuilder() to construct.
    private Type2() {
      initFields();
    }
    private Type2(boolean noInit) {}
    
    private static final Type2 defaultInstance;
    public static Type2 getDefaultInstance() {
      return defaultInstance;
    }
    
    public Type2 getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.orbekk.protobuf.Test.internal_static_com_orbekk_protobuf_Type2_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.orbekk.protobuf.Test.internal_static_com_orbekk_protobuf_Type2_fieldAccessorTable;
    }
    
    // optional int32 result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean hasResult;
    private int result_ = 0;
    public boolean hasResult() { return hasResult; }
    public int getResult() { return result_; }
    
    // optional string message = 2;
    public static final int MESSAGE_FIELD_NUMBER = 2;
    private boolean hasMessage;
    private java.lang.String message_ = "";
    public boolean hasMessage() { return hasMessage; }
    public java.lang.String getMessage() { return message_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResult()) {
        output.writeInt32(1, getResult());
      }
      if (hasMessage()) {
        output.writeString(2, getMessage());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getResult());
      }
      if (hasMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getMessage());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.orbekk.protobuf.Test.Type2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.orbekk.protobuf.Test.Type2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.orbekk.protobuf.Test.Type2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.orbekk.protobuf.Test.Type2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.orbekk.protobuf.Test.Type2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.orbekk.protobuf.Test.Type2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.orbekk.protobuf.Test.Type2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.orbekk.protobuf.Test.Type2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.orbekk.protobuf.Test.Type2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.orbekk.protobuf.Test.Type2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.orbekk.protobuf.Test.Type2 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.orbekk.protobuf.Test.Type2 result;
      
      // Construct using com.orbekk.protobuf.Test.Type2.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.orbekk.protobuf.Test.Type2();
        return builder;
      }
      
      protected com.orbekk.protobuf.Test.Type2 internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.orbekk.protobuf.Test.Type2();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.orbekk.protobuf.Test.Type2.getDescriptor();
      }
      
      public com.orbekk.protobuf.Test.Type2 getDefaultInstanceForType() {
        return com.orbekk.protobuf.Test.Type2.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.orbekk.protobuf.Test.Type2 build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.orbekk.protobuf.Test.Type2 buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.orbekk.protobuf.Test.Type2 buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.orbekk.protobuf.Test.Type2 returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.orbekk.protobuf.Test.Type2) {
          return mergeFrom((com.orbekk.protobuf.Test.Type2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.orbekk.protobuf.Test.Type2 other) {
        if (other == com.orbekk.protobuf.Test.Type2.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setResult(input.readInt32());
              break;
            }
            case 18: {
              setMessage(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional int32 result = 1;
      public boolean hasResult() {
        return result.hasResult();
      }
      public int getResult() {
        return result.getResult();
      }
      public Builder setResult(int value) {
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder clearResult() {
        result.hasResult = false;
        result.result_ = 0;
        return this;
      }
      
      // optional string message = 2;
      public boolean hasMessage() {
        return result.hasMessage();
      }
      public java.lang.String getMessage() {
        return result.getMessage();
      }
      public Builder setMessage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder clearMessage() {
        result.hasMessage = false;
        result.message_ = getDefaultInstance().getMessage();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.orbekk.protobuf.Type2)
    }
    
    static {
      defaultInstance = new Type2(true);
      com.orbekk.protobuf.Test.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.orbekk.protobuf.Type2)
  }
  
  public static abstract class Service
      implements com.google.protobuf.Service {
    protected Service() {}
    
    public interface Interface {
      public abstract void testA(
          com.google.protobuf.RpcController controller,
          com.orbekk.protobuf.Test.Type1 request,
          com.google.protobuf.RpcCallback<com.orbekk.protobuf.Test.Type2> done);
      
      public abstract void testB(
          com.google.protobuf.RpcController controller,
          com.orbekk.protobuf.Test.Type1 request,
          com.google.protobuf.RpcCallback<com.orbekk.protobuf.Test.Type2> done);
      
      public abstract void testC(
          com.google.protobuf.RpcController controller,
          com.orbekk.protobuf.Test.Type1 request,
          com.google.protobuf.RpcCallback<com.orbekk.protobuf.Test.Type2> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new Service() {
        @Override
        public  void testA(
            com.google.protobuf.RpcController controller,
            com.orbekk.protobuf.Test.Type1 request,
            com.google.protobuf.RpcCallback<com.orbekk.protobuf.Test.Type2> done) {
          impl.testA(controller, request, done);
        }
        
        @Override
        public  void testB(
            com.google.protobuf.RpcController controller,
            com.orbekk.protobuf.Test.Type1 request,
            com.google.protobuf.RpcCallback<com.orbekk.protobuf.Test.Type2> done) {
          impl.testB(controller, request, done);
        }
        
        @Override
        public  void testC(
            com.google.protobuf.RpcController controller,
            com.orbekk.protobuf.Test.Type1 request,
            com.google.protobuf.RpcCallback<com.orbekk.protobuf.Test.Type2> done) {
          impl.testC(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.testA(controller, (com.orbekk.protobuf.Test.Type1)request);
            case 1:
              return impl.testB(controller, (com.orbekk.protobuf.Test.Type1)request);
            case 2:
              return impl.testC(controller, (com.orbekk.protobuf.Test.Type1)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.orbekk.protobuf.Test.Type1.getDefaultInstance();
            case 1:
              return com.orbekk.protobuf.Test.Type1.getDefaultInstance();
            case 2:
              return com.orbekk.protobuf.Test.Type1.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return com.orbekk.protobuf.Test.Type2.getDefaultInstance();
            case 1:
              return com.orbekk.protobuf.Test.Type2.getDefaultInstance();
            case 2:
              return com.orbekk.protobuf.Test.Type2.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void testA(
        com.google.protobuf.RpcController controller,
        com.orbekk.protobuf.Test.Type1 request,
        com.google.protobuf.RpcCallback<com.orbekk.protobuf.Test.Type2> done);
    
    public abstract void testB(
        com.google.protobuf.RpcController controller,
        com.orbekk.protobuf.Test.Type1 request,
        com.google.protobuf.RpcCallback<com.orbekk.protobuf.Test.Type2> done);
    
    public abstract void testC(
        com.google.protobuf.RpcController controller,
        com.orbekk.protobuf.Test.Type1 request,
        com.google.protobuf.RpcCallback<com.orbekk.protobuf.Test.Type2> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.orbekk.protobuf.Test.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.testA(controller, (com.orbekk.protobuf.Test.Type1)request,
            com.google.protobuf.RpcUtil.<com.orbekk.protobuf.Test.Type2>specializeCallback(
              done));
          return;
        case 1:
          this.testB(controller, (com.orbekk.protobuf.Test.Type1)request,
            com.google.protobuf.RpcUtil.<com.orbekk.protobuf.Test.Type2>specializeCallback(
              done));
          return;
        case 2:
          this.testC(controller, (com.orbekk.protobuf.Test.Type1)request,
            com.google.protobuf.RpcUtil.<com.orbekk.protobuf.Test.Type2>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.orbekk.protobuf.Test.Type1.getDefaultInstance();
        case 1:
          return com.orbekk.protobuf.Test.Type1.getDefaultInstance();
        case 2:
          return com.orbekk.protobuf.Test.Type1.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.orbekk.protobuf.Test.Type2.getDefaultInstance();
        case 1:
          return com.orbekk.protobuf.Test.Type2.getDefaultInstance();
        case 2:
          return com.orbekk.protobuf.Test.Type2.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends com.orbekk.protobuf.Test.Service implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void testA(
          com.google.protobuf.RpcController controller,
          com.orbekk.protobuf.Test.Type1 request,
          com.google.protobuf.RpcCallback<com.orbekk.protobuf.Test.Type2> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.orbekk.protobuf.Test.Type2.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.orbekk.protobuf.Test.Type2.class,
            com.orbekk.protobuf.Test.Type2.getDefaultInstance()));
      }
      
      public  void testB(
          com.google.protobuf.RpcController controller,
          com.orbekk.protobuf.Test.Type1 request,
          com.google.protobuf.RpcCallback<com.orbekk.protobuf.Test.Type2> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          com.orbekk.protobuf.Test.Type2.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.orbekk.protobuf.Test.Type2.class,
            com.orbekk.protobuf.Test.Type2.getDefaultInstance()));
      }
      
      public  void testC(
          com.google.protobuf.RpcController controller,
          com.orbekk.protobuf.Test.Type1 request,
          com.google.protobuf.RpcCallback<com.orbekk.protobuf.Test.Type2> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          com.orbekk.protobuf.Test.Type2.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.orbekk.protobuf.Test.Type2.class,
            com.orbekk.protobuf.Test.Type2.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public com.orbekk.protobuf.Test.Type2 testA(
          com.google.protobuf.RpcController controller,
          com.orbekk.protobuf.Test.Type1 request)
          throws com.google.protobuf.ServiceException;
      
      public com.orbekk.protobuf.Test.Type2 testB(
          com.google.protobuf.RpcController controller,
          com.orbekk.protobuf.Test.Type1 request)
          throws com.google.protobuf.ServiceException;
      
      public com.orbekk.protobuf.Test.Type2 testC(
          com.google.protobuf.RpcController controller,
          com.orbekk.protobuf.Test.Type1 request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public com.orbekk.protobuf.Test.Type2 testA(
          com.google.protobuf.RpcController controller,
          com.orbekk.protobuf.Test.Type1 request)
          throws com.google.protobuf.ServiceException {
        return (com.orbekk.protobuf.Test.Type2) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.orbekk.protobuf.Test.Type2.getDefaultInstance());
      }
      
      
      public com.orbekk.protobuf.Test.Type2 testB(
          com.google.protobuf.RpcController controller,
          com.orbekk.protobuf.Test.Type1 request)
          throws com.google.protobuf.ServiceException {
        return (com.orbekk.protobuf.Test.Type2) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          com.orbekk.protobuf.Test.Type2.getDefaultInstance());
      }
      
      
      public com.orbekk.protobuf.Test.Type2 testC(
          com.google.protobuf.RpcController controller,
          com.orbekk.protobuf.Test.Type1 request)
          throws com.google.protobuf.ServiceException {
        return (com.orbekk.protobuf.Test.Type2) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          com.orbekk.protobuf.Test.Type2.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_orbekk_protobuf_Type1_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_orbekk_protobuf_Type1_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_orbekk_protobuf_Type2_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_orbekk_protobuf_Type2_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n,src/test/java/com/orbekk/protobuf/Test" +
      ".proto\022\023com.orbekk.protobuf\".\n\005Type1\022\t\n\001" +
      "a\030\001 \001(\005\022\t\n\001b\030\002 \001(\005\022\017\n\007message\030\003 \001(\t\"(\n\005T" +
      "ype2\022\016\n\006result\030\001 \001(\005\022\017\n\007message\030\002 \001(\t2\314\001" +
      "\n\007Service\022?\n\005TestA\022\032.com.orbekk.protobuf" +
      ".Type1\032\032.com.orbekk.protobuf.Type2\022?\n\005Te" +
      "stB\022\032.com.orbekk.protobuf.Type1\032\032.com.or" +
      "bekk.protobuf.Type2\022?\n\005TestC\022\032.com.orbek" +
      "k.protobuf.Type1\032\032.com.orbekk.protobuf.T" +
      "ype2B\003\210\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_orbekk_protobuf_Type1_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_orbekk_protobuf_Type1_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_orbekk_protobuf_Type1_descriptor,
              new java.lang.String[] { "A", "B", "Message", },
              com.orbekk.protobuf.Test.Type1.class,
              com.orbekk.protobuf.Test.Type1.Builder.class);
          internal_static_com_orbekk_protobuf_Type2_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_orbekk_protobuf_Type2_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_orbekk_protobuf_Type2_descriptor,
              new java.lang.String[] { "Result", "Message", },
              com.orbekk.protobuf.Test.Type2.class,
              com.orbekk.protobuf.Test.Type2.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
